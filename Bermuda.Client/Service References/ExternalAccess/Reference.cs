//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bermuda.Client.ExternalAccess {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mention", Namespace="http://schemas.datacontract.org/2004/07/Bermuda.Entities")]
    [System.SerializableAttribute()]
    public partial class Mention : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatedOnTicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] DatasourcesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InfluenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OccurredOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OccurredOnDayTicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OccurredOnTicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OccurredOnYearTicksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SentimentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UpdatedOnTicksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatedOnTicks {
            get {
                return this.CreatedOnTicksField;
            }
            set {
                if ((this.CreatedOnTicksField.Equals(value) != true)) {
                    this.CreatedOnTicksField = value;
                    this.RaisePropertyChanged("CreatedOnTicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] Datasources {
            get {
                return this.DatasourcesField;
            }
            set {
                if ((object.ReferenceEquals(this.DatasourcesField, value) != true)) {
                    this.DatasourcesField = value;
                    this.RaisePropertyChanged("Datasources");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((object.ReferenceEquals(this.GuidField, value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Influence {
            get {
                return this.InfluenceField;
            }
            set {
                if ((this.InfluenceField.Equals(value) != true)) {
                    this.InfluenceField = value;
                    this.RaisePropertyChanged("Influence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OccurredOn {
            get {
                return this.OccurredOnField;
            }
            set {
                if ((this.OccurredOnField.Equals(value) != true)) {
                    this.OccurredOnField = value;
                    this.RaisePropertyChanged("OccurredOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OccurredOnDayTicks {
            get {
                return this.OccurredOnDayTicksField;
            }
            set {
                if ((this.OccurredOnDayTicksField.Equals(value) != true)) {
                    this.OccurredOnDayTicksField = value;
                    this.RaisePropertyChanged("OccurredOnDayTicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OccurredOnTicks {
            get {
                return this.OccurredOnTicksField;
            }
            set {
                if ((this.OccurredOnTicksField.Equals(value) != true)) {
                    this.OccurredOnTicksField = value;
                    this.RaisePropertyChanged("OccurredOnTicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OccurredOnYearTicks {
            get {
                return this.OccurredOnYearTicksField;
            }
            set {
                if ((this.OccurredOnYearTicksField.Equals(value) != true)) {
                    this.OccurredOnYearTicksField = value;
                    this.RaisePropertyChanged("OccurredOnYearTicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Sentiment {
            get {
                return this.SentimentField;
            }
            set {
                if ((this.SentimentField.Equals(value) != true)) {
                    this.SentimentField = value;
                    this.RaisePropertyChanged("Sentiment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedOn {
            get {
                return this.UpdatedOnField;
            }
            set {
                if ((this.UpdatedOnField.Equals(value) != true)) {
                    this.UpdatedOnField = value;
                    this.RaisePropertyChanged("UpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UpdatedOnTicks {
            get {
                return this.UpdatedOnTicksField;
            }
            set {
                if ((this.UpdatedOnTicksField.Equals(value) != true)) {
                    this.UpdatedOnTicksField = value;
                    this.RaisePropertyChanged("UpdatedOnTicks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BermudaNodeStatistic", Namespace="http://schemas.datacontract.org/2004/07/Bermuda.Entities")]
    [System.SerializableAttribute()]
    public partial class BermudaNodeStatistic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Bermuda.Client.ExternalAccess.BermudaNodeStatistic[] ChildNodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilteredItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InitiatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan LinqExecutionTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan OperationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReducedItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Bermuda.Client.ExternalAccess.BermudaNodeStatistic[] ChildNodes {
            get {
                return this.ChildNodesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildNodesField, value) != true)) {
                    this.ChildNodesField = value;
                    this.RaisePropertyChanged("ChildNodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilteredItems {
            get {
                return this.FilteredItemsField;
            }
            set {
                if ((this.FilteredItemsField.Equals(value) != true)) {
                    this.FilteredItemsField = value;
                    this.RaisePropertyChanged("FilteredItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Initiated {
            get {
                return this.InitiatedField;
            }
            set {
                if ((this.InitiatedField.Equals(value) != true)) {
                    this.InitiatedField = value;
                    this.RaisePropertyChanged("Initiated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan LinqExecutionTime {
            get {
                return this.LinqExecutionTimeField;
            }
            set {
                if ((this.LinqExecutionTimeField.Equals(value) != true)) {
                    this.LinqExecutionTimeField = value;
                    this.RaisePropertyChanged("LinqExecutionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeId {
            get {
                return this.NodeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeIdField, value) != true)) {
                    this.NodeIdField = value;
                    this.RaisePropertyChanged("NodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan OperationTime {
            get {
                return this.OperationTimeField;
            }
            set {
                if ((this.OperationTimeField.Equals(value) != true)) {
                    this.OperationTimeField = value;
                    this.RaisePropertyChanged("OperationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReducedItems {
            get {
                return this.ReducedItemsField;
            }
            set {
                if ((this.ReducedItemsField.Equals(value) != true)) {
                    this.ReducedItemsField = value;
                    this.RaisePropertyChanged("ReducedItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalItems {
            get {
                return this.TotalItemsField;
            }
            set {
                if ((this.TotalItemsField.Equals(value) != true)) {
                    this.TotalItemsField = value;
                    this.RaisePropertyChanged("TotalItems");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Datapoint", Namespace="http://schemas.datacontract.org/2004/07/Bermuda.Entities")]
    [System.SerializableAttribute()]
    public partial class Datapoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Id2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Text2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id2 {
            get {
                return this.Id2Field;
            }
            set {
                if ((this.Id2Field.Equals(value) != true)) {
                    this.Id2Field = value;
                    this.RaisePropertyChanged("Id2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text2 {
            get {
                return this.Text2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Text2Field, value) != true)) {
                    this.Text2Field = value;
                    this.RaisePropertyChanged("Text2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BermudaMentionResult", Namespace="http://schemas.datacontract.org/2004/07/Bermuda.Service")]
    [System.SerializableAttribute()]
    public partial class BermudaMentionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Bermuda.Client.ExternalAccess.Mention[] MentionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Bermuda.Client.ExternalAccess.BermudaNodeStatistic MetadataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Bermuda.Client.ExternalAccess.Mention[] Mentions {
            get {
                return this.MentionsField;
            }
            set {
                if ((object.ReferenceEquals(this.MentionsField, value) != true)) {
                    this.MentionsField = value;
                    this.RaisePropertyChanged("Mentions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Bermuda.Client.ExternalAccess.BermudaNodeStatistic Metadata {
            get {
                return this.MetadataField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataField, value) != true)) {
                    this.MetadataField = value;
                    this.RaisePropertyChanged("Metadata");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BermudaDatapointResult", Namespace="http://schemas.datacontract.org/2004/07/Bermuda.Service")]
    [System.SerializableAttribute()]
    public partial class BermudaDatapointResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Bermuda.Client.ExternalAccess.Datapoint[] DatapointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Bermuda.Client.ExternalAccess.BermudaNodeStatistic MetadataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Bermuda.Client.ExternalAccess.Datapoint[] Datapoints {
            get {
                return this.DatapointsField;
            }
            set {
                if ((object.ReferenceEquals(this.DatapointsField, value) != true)) {
                    this.DatapointsField = value;
                    this.RaisePropertyChanged("Datapoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Bermuda.Client.ExternalAccess.BermudaNodeStatistic Metadata {
            get {
                return this.MetadataField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataField, value) != true)) {
                    this.MetadataField = value;
                    this.RaisePropertyChanged("Metadata");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExternalAccess.IBermudaService")]
    public interface IBermudaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBermudaService/Ping", ReplyAction="http://tempuri.org/IBermudaService/PingResponse")]
        string Ping(string param);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBermudaService/GetMentions", ReplyAction="http://tempuri.org/IBermudaService/GetMentionsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.Mention[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.Mention))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.BermudaNodeStatistic))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.BermudaNodeStatistic[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.Datapoint[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.Datapoint))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.BermudaMentionResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.BermudaDatapointResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(long[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        Bermuda.Client.ExternalAccess.BermudaMentionResult GetMentions(string domain, string blob, int partitions, string query, string paging, System.DateTime minDate, System.DateTime maxDate, int remdepth, object[] parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBermudaService/GetDatapoints", ReplyAction="http://tempuri.org/IBermudaService/GetDatapointsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.Mention[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.Mention))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.BermudaNodeStatistic))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.BermudaNodeStatistic[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.Datapoint[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.Datapoint))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.BermudaMentionResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Bermuda.Client.ExternalAccess.BermudaDatapointResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(long[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        Bermuda.Client.ExternalAccess.BermudaDatapointResult GetDatapoints(string domain, string blob, int partitions, string query, string mapreduce, string merge, System.DateTime minDate, System.DateTime maxDate, int remdepth, object[] parameters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBermudaServiceChannel : Bermuda.Client.ExternalAccess.IBermudaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BermudaServiceClient : System.ServiceModel.ClientBase<Bermuda.Client.ExternalAccess.IBermudaService>, Bermuda.Client.ExternalAccess.IBermudaService {
        
        public BermudaServiceClient() {
        }
        
        public BermudaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BermudaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BermudaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BermudaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Ping(string param) {
            return base.Channel.Ping(param);
        }
        
        public Bermuda.Client.ExternalAccess.BermudaMentionResult GetMentions(string domain, string blob, int partitions, string query, string paging, System.DateTime minDate, System.DateTime maxDate, int remdepth, object[] parameters) {
            return base.Channel.GetMentions(domain, blob, partitions, query, paging, minDate, maxDate, remdepth, parameters);
        }
        
        public Bermuda.Client.ExternalAccess.BermudaDatapointResult GetDatapoints(string domain, string blob, int partitions, string query, string mapreduce, string merge, System.DateTime minDate, System.DateTime maxDate, int remdepth, object[] parameters) {
            return base.Channel.GetDatapoints(domain, blob, partitions, query, mapreduce, merge, minDate, maxDate, remdepth, parameters);
        }
    }
}
